class Solution:
    def hasAllCodes(self, s: str, k: int) -> bool:
        if s inreturn False

        start, end = 0, 0
        l = len(s)
        binary = set()
        while start <= l-k:
            val = s[start: start+k]
            # print(val)
            binary.add(val)
            start += 1
        count = 0
        print("binary", binary)
        def convert(s):
            rev = s[::-1]
            # print( "s, rev", s, rev)

            num = sum( int(rev[i])*( 2**i) for i in range(len(rev)))
            # print(s, num)
            return num in range(k+1)


        for item in binary:
            if convert(item):
                # print("item", item)
                count +=1
        return count == k+1

            


        
        
            


            